# name: Rails Tests

# on:
#   pull_request:
#     branches:
#       - 'master'
#   push:
#     branches:
#       - 'master'

# jobs:
#   build:
#     runs-on: ubuntu-20.04

#     services:
#       postgres:
#         image: postgres:11.5
#         ports: ["5432:5432"]
#         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

#     steps:
#     - uses: actions/checkout@v1

#     - name: Set up Ruby 2.6
#       uses: actions/setup-ruby@v1
#       with:
#         ruby-version: 2.6.x

#     - name: Install PostgreSQL 11 client
#       run: |
#         sudo apt-get -yqq install libpq-dev

#     - name: Build App
#       env:
#         PGHOST: localhost
#         PGUSER: postgres
#         RAILS_ENV: test
#       run: |
#         gem install bundler
#         bundle install --jobs 4 --retry 3
#         bundle exec rake app:update:bin
#         bin/rails db:setup
#         bundle exec rails webpacker:install

#     - name: Run Tests
#       env:
#         PGHOST: localhost
#         PGUSER: postgres
#         RAILS_ENV: test
#       run: |
#         bundle exec rspec
#         export DISPLAY=:99
#         chromedriver --url-base=/wd/hub &
#         sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

name: Verify
on: [push]

jobs:
  # linters:
  #   name: Linters
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Ruby
  #       uses: ruby/setup-ruby@v1
  #     - name: Ruby gem cache
  #       uses: actions/cache@v1
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gems-
  #     - name: Install gems
  #       run: |
  #         bundle config path vendor/bundle
  #         bundle install --jobs 4 --retry 3

  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10.13.0
  #     - name: Find yarn cache location
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: JS package cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install packages
  #       run: |
  #         yarn install --pure-lockfile

  #     - name: Run linters
  #       run: |
  #         bin/rubocop --parallel
  #         bin/stylelint
  #         bin/prettier
  #         bin/eslint
  #     - name: Run security checks
  #       run: |
  #         bin/bundler-audit --update
  #         bin/brakeman -q -w2

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: start Chrome
        run: |
          sudo apt-get install -y xvfb
          sudo apt-get -y install xorg xvfb gtk2-engines-pixbuf
          sudo apt-get -y install dbus-x11 xfonts-base xfonts-100dpi xfonts-75dpi xfonts-cyrillic xfonts-scalable
          sudo apt-get -y install imagemagick x11-apps
          Xvfb -ac :99 -screen 0 1280x1024x16 & export DISPLAY=:99 &
          /usr/bin/google-chrome

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@v1.0.1

      - name: Setup test database
        env:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
        run: |
          bundle exec rails db:setup
          bundle exec rake db:reset

      - name: Run tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
        run: bundle exec rspec
